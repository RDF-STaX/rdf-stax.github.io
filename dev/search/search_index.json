{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RDF Stream Taxonomy (RDF-STaX)","text":"<p>RDF-STaX is a taxonomy of RDF stream types. It can be used to describe RDF streams used on the Web, in software tools, or in scientific publications.</p> <p>RDF-STaX is modeled as an OWL 2 DL ontology, using SKOS to define the taxonomical structure.</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>Have a look at the taxonomy overview to get an idea of the different types of RDF streams that are defined in RDF-STaX. You can also see the ontology documentation for a more detailed description of the ontology.</p> <ul> <li>Taxonomy overview</li> <li>Ontology documentation</li> <li>How to use RDF-STaX?</li> <li>Nanopublications \u2013 publishing assertions about RDF stream type usage</li> <li>Use cases and publications</li> <li>Contributing</li> <li>Licensing and citation</li> </ul>"},{"location":"contributing/","title":"Contributing to RDF-STaX","text":"<p>Do you have an idea for how to improve RDF-STaX? Or maybe you found a bug? Any contributions are welcome!</p>"},{"location":"contributing/#filing-issues","title":"Filing issues","text":"<p>Feature requests, bug reports, and other issues can be filed in the issue tracker on GitHub.</p>"},{"location":"contributing/#editing-the-ontology","title":"Editing the ontology","text":"<p>The ontology is stored in the <code>src</code> directory of the main repository. It is split into two files:</p> <ul> <li>The main ontology file is <code>src/stax.ttl</code>. It should be edited with Prot\u00e9g\u00e9.<ul> <li>Do not add information about the authors/contributors there. This is done in the <code>src/authors.ttl</code> file (see below).</li> <li>Do not set the ontology's version IRI or version \u2013 this is done automatically in CI during release.</li> <li>You must keep this file valid OWL 2 DL. The CI will check it when you open a pull request.</li> </ul> </li> <li>The <code>src/authors.ttl</code> file contains information about the authors/contributors of the ontology. It should be edited manually with a text editor.</li> <li>The <code>src/alignments.ttl</code> file contains alignments to other vocabularies. It should be edited manually with a text editor.</li> </ul> <p>Pull requests are welcome.</p>"},{"location":"contributing/#ci-pipeline","title":"CI pipeline","text":"<p>The CI automatically publishes the ontology (see the releases section below) and pushes it to the website. The CI does the following:</p> <ul> <li>Check if the ontology is valid and matches the OWL 2 DL profile (with ROBOT).</li> <li>Set the ontology's version IRI and version.</li> <li>Save an OWL 2 DL version of the ontology in all supported formats.</li> <li>Infer additional statements with ROBOT.</li> <li>Merge in the author information from <code>src/authors.ttl</code>.</li> <li>Merge in the alignments to other vocabularies from <code>src/alignments.ttl</code>.</li> <li>Serialize the ontology in all supported formats.</li> </ul> <p>The CI code can be found in the <code>ci-worker</code> repository. The code there is licensed under Apache 2.0.</p>"},{"location":"contributing/#editing-documentation","title":"Editing documentation","text":"<p>Documentation is also stored in the main repository, in the <code>docs</code> directory. You can open a pull request for any of the files there, except the ones in the <code>includes</code> subdirectory. These files are generated automatically in the CI pipeline.</p> <p>You can also use the Edit this page link in the top right corner of each page on the website to edit the page directly on GitHub.</p>"},{"location":"contributing/#releases","title":"Releases","text":"<p>The <code>dev</code> (development) version corresponds to the <code>main</code> branch of the repository. A new development release is made automatically every time a commit is pushed to the <code>main</code> branch.</p> <p>The stable versions (e.g., 1.0.0) are created manually by the maintainer. To create a new tagged release:</p> <ol> <li>Check out the main branch of the main repo on your local machine.</li> <li>Update the main branch by running git pull. Make sure the pull was successful.</li> <li>Create a new tag with the version number: <code>git tag vX.Y.Z</code>.</li> <li>Push the tag to GitHub: <code>git push origin --tag vX.Y.Z</code>.</li> </ol> <p>The rest of the process is automatic. Make sure to prepend <code>v</code> before the version tag, e.g., <code>v1.0.0</code>. Otherwise, the release will not be created.</p>"},{"location":"contributing/#see-also","title":"See also","text":"<ul> <li>How to use RDF-STaX?</li> <li>Licensing and citation</li> </ul>"},{"location":"licensing/","title":"Licensing and citation","text":"<p>The RDF-STaX ontology and its documentation is licensed under the Creative Commons Attribution 4.0 license.</p>"},{"location":"licensing/#attribution-citation","title":"Attribution / citation","text":"<p>If you use RDF-STaX in your research, please cite the paper introducing it (TODO):</p> <p>TODO</p> <p>Or use this BibTeX entry:</p> <pre><code>TODO\n</code></pre>"},{"location":"licensing/#rdf-stax-maintainer","title":"RDF-STaX maintainer","text":"<p>RDF-STaX was created and is maintained by Piotr Sowi\u0144ski (Ostrzyciel) (ORCID).</p>"},{"location":"nanopubs/","title":"Nanopublications","text":"<p>TODO: intro to nanopubs</p>"},{"location":"nanopubs/#existing-nanopublications","title":"Existing nanopublications","text":""},{"location":"nanopubs/#making-new-nanopublications","title":"Making new nanopublications","text":"<p>TODO</p>"},{"location":"nanopubs/#example-nanopublication","title":"Example nanopublication","text":""},{"location":"ontology/","title":"Ontology documentation","text":"<p>Info</p> <p>Download the ontology in RDF: Turtle, N-Triples, JSON-LD, RDF/XML.</p> <p>Note</p> <p>The documentation and the download links here are for the release version of the ontology. The ontology sources are available on GitHub \u2013 see also Contributing.</p> RDF Stream Taxonomy made by  pyLODE 2.13.2 RDF Stream Taxonomy Metadata URI <code>https://w3id.org/stax/ontology</code> Creator(s) Piotr Sowi\u0144ski Orcid logo Contributor(s) Pawe\u0142 Szmeja Orcid logo Created 2023-10-22T00:00:00 Modified 2023-10-29T12:38:37 Version Information dev Version URI https://w3id.org/stax/dev/ontology Imports http://www.w3.org/TR/skos-reference/skos-owl1-dl.rdf License https://spdx.org/licenses/CC-BY-4.0 Ontology RDF RDF (turtle) Description <p>RDF-STaX is an OWL 2 DL ontology that enables describing the types of RDF streams and defines relations between them.</p> Table of Contents <ol> <li>Classes</li> <li>Object Properties</li> <li>Annotation Properties</li> <li>Named Individuals</li> <li>Namespaces</li> <li>Legend</li> </ol> Overview Figure 1: Ontology overview Classes \u2191 <ul> <li>Abstract RDF stream type</li> <li>Concrete RDF stream type</li> <li>RDF element type</li> <li>RDF stream type</li> <li>RDF stream type usage</li> </ul>            Abstract RDF stream type<sup>c</sup> # Classes URI <code>https://w3id.org/stax/ontology#AbstractRdfStreamType</code> Description <p>Class for abstract RDF stream types in the taxonomy. Instances of this class have abstract definitions, i.e., they cannot be used to annotate real streams. They are only intended to be used for reasoning about stream types.</p> Super-classes RDF stream type<sup>c</sup> Members stax:flatRdfStream stax:rdfStream stax:groupedRdfStream            Concrete RDF stream type<sup>c</sup> # Classes URI <code>https://w3id.org/stax/ontology#ConcreteRdfStreamType</code> Description <p>Class for the concrete RDF stream types in the taxonomy. Instances of this class have concrete definitions, and they can be used to annotate real streams.</p> Super-classes RDF stream type<sup>c</sup> Restrictions has element type<sup>op</sup> only RDF element type<sup>c</sup> has element type<sup>op</sup> some RDF element type<sup>c</sup> In domain of is in stream type semantic relation with<sup>op</sup> can be flattened into<sup>op</sup> has element type<sup>op</sup> can be grouped into<sup>op</sup> In range of can be flattened into<sup>op</sup> has stream type<sup>op</sup> can be grouped into<sup>op</sup> is in stream type semantic relation with<sup>op</sup> Members stax:rdfGraphStream stax:flatRdfTripleStream stax:timestampedRdfNamedGraphStream stax:flatRdfQuadStream stax:rdfDatasetStream stax:rdfNamedGraphStream stax:rdfSubjectGraphStream            RDF element type<sup>c</sup> # Classes URI <code>https://w3id.org/stax/ontology#RdfElementType</code> Description <p>Class for base types of elements in RDF streams. There are four instances of this class (triple, quad, graph, dataset) and they should not be further specialized. The instances of this class do NOT form a taxonomical structure.</p> In range of has element type<sup>op</sup> Members stax:triple stax:quad stax:dataset stax:graph            RDF stream type<sup>c</sup> # Classes URI <code>https://w3id.org/stax/ontology#RdfStreamType</code> Description <p>Base class for RDF stream types. This class should not be used directly \u2013 use instead either stax:AbstractRdfStreamType or stax:ConcreteRdfStreamType.</p> Super-classes skos:Concept<sup>c</sup> Sub-classes Abstract RDF stream type<sup>c</sup> Concrete RDF stream type<sup>c</sup>            RDF stream type usage<sup>c</sup> # Classes URI <code>https://w3id.org/stax/ontology#RdfStreamTypeUsage</code> Description <p>Class for instances of using an RDF stream type, in a program, an academic paper, or elsewhere. This class is suitable for annotating both theoretical uses and practical ones, i.e., real streams or datasets.</p> <p>Instances of this class should have the stax:hasStreamType property pointing to a concrete stream type. The stax:usedIn property is recommended to indicate where the stream is used \u2013 alternatively you can use its inverse (stax:hasStreamTypeUsage). The use of other properties (e.g., rdfs:label, rdfs:comment) is encouraged to give more context about the usage.</p> <p>Note that \"stream type usage\" is a subjective assertion and instances of this class may be annotated with additional provenance properties to explain who made the assertion. There can be multiple views on what type of stream is in use, depending on the involved actor, processing step, etc.</p> Example(s) https://w3id.org/stax/dev/use-it/ Restrictions has stream type<sup>op</sup> only Concrete RDF stream type<sup>c</sup> In domain of has stream type<sup>op</sup> is usage of<sup>op</sup> In range of has stream type usage<sup>op</sup> Object Properties \u2191 <ul> <li>can be flattened into</li> <li>can be grouped into</li> <li>has element type</li> <li>has stream type</li> <li>has stream type usage</li> <li>is usage of</li> <li>is in stream type semantic relation with</li> </ul> can be flattened into<sup>op</sup> # OPs URI <code>https://w3id.org/stax/ontology#canBeFlattenedInto</code> Description <p>Indicates that the subject stream type can be flattened into the object. The flattening is done by enumerating all components of the stream elements in one, flat stream. For example, a graph stream can be flattened into a flat triple stream.</p> Super-properties is in stream type semantic relation with<sup>op</sup> Domain(s) Concrete RDF stream type<sup>c</sup> Range(s) stax:ConcreteRdfStreamType<sup>c</sup> can be grouped into<sup>op</sup> # OPs URI <code>https://w3id.org/stax/ontology#canBeGroupedInto</code> Description <p>Indicates that the subject stream type can be grouped into the object. The grouping is done by splitting the flat stream of statements into groups, which then can be used to construct elements of the grouped stream. For example, a flat triple stream can be grouped into a graph stream.</p> Super-properties is in stream type semantic relation with<sup>op</sup> Domain(s) Concrete RDF stream type<sup>c</sup> Range(s) stax:ConcreteRdfStreamType<sup>c</sup> has element type<sup>op</sup> # OPs URI <code>https://w3id.org/stax/ontology#hasElementType</code> Description <p>For an RDF stream type, indicates the base (primitive) type of elements in the stream (e.g., triple, quad, graph, dataset).</p> Domain(s) Concrete RDF stream type<sup>c</sup> Range(s) stax:RdfElementType<sup>c</sup> has stream type<sup>op</sup> # OPs URI <code>https://w3id.org/stax/ontology#hasStreamType</code> Description <p>For an RDF stream type usage, this property indicates which stream type is used.</p> Domain(s) RDF stream type usage<sup>c</sup> Range(s) stax:ConcreteRdfStreamType<sup>c</sup> has stream type usage<sup>op</sup> # OPs URI <code>https://w3id.org/stax/ontology#hasStreamTypeUsage</code> Description <p>Inverse of stax:isUsageOf \u2013 indicates that the subject is related to a usage of an RDF stream type.</p> <p>The subject for this property can be for example a published stream on the Web (e.g., vocals:RDFStream) or a scientific publication that discusses a usage of an RDF stream type.</p> Inverse properties is usage of<sup>op</sup> Range(s) stax:RdfStreamTypeUsage<sup>c</sup> is usage of<sup>op</sup> # OPs URI <code>https://w3id.org/stax/ontology#isUsageOf</code> Description <p>For an RDF stream type usage, this property indicates where the stream was used or from where the usage was derived. The value of this property can be for example the DOI URL of an academic work.</p> <p>Inverse of stax:hasStreamTypeUsage.</p> Domain(s) RDF stream type usage<sup>c</sup> is in stream type semantic relation with<sup>op</sup> # OPs URI <code>https://w3id.org/stax/ontology#streamTypeSemanticRelation</code> Description <p>This property should not be used directly, but as a super-property for all properties denoting a relationship of meaning between RDF stream types.</p> Super-properties skos:semanticRelation Domain(s) Concrete RDF stream type<sup>c</sup> Range(s) stax:ConcreteRdfStreamType<sup>c</sup> Annotation Properties \u2191 <ul> <li>description</li> <li>title</li> <li>created</li> <li>license</li> <li>modified</li> <li>preferredNamespacePrefix</li> <li>preferredNamespaceUri</li> <li>citation</li> <li>homepage</li> </ul> description<sup>ap</sup> # APs URI <code>http://purl.org/dc/elements/1.1/description</code> title<sup>ap</sup> # APs URI <code>http://purl.org/dc/elements/1.1/title</code> created<sup>ap</sup> # APs URI <code>http://purl.org/dc/terms/created</code> license<sup>ap</sup> # APs URI <code>http://purl.org/dc/terms/license</code> modified<sup>ap</sup> # APs URI <code>http://purl.org/dc/terms/modified</code> preferredNamespacePrefix<sup>ap</sup> # APs URI <code>http://purl.org/vocab/vann/preferredNamespacePrefix</code> preferredNamespaceUri<sup>ap</sup> # APs URI <code>http://purl.org/vocab/vann/preferredNamespaceUri</code> citation<sup>ap</sup> # APs URI <code>http://schema.org/citation</code> homepage<sup>ap</sup> # APs URI <code>http://xmlns.com/foaf/0.1/homepage</code> Named Individuals \u2191 <ul> <li>Flat RDF quad stream</li> <li>Flat RDF stream</li> <li>Flat RDF triple stream</li> <li>Grouped RDF stream</li> <li>RDF Stream Taxonomy</li> <li>RDF dataset</li> <li>RDF dataset stream</li> <li>RDF graph</li> <li>RDF graph stream</li> <li>RDF named graph stream</li> <li>RDF quad</li> <li>RDF stream</li> <li>RDF subject graph stream</li> <li>RDF triple</li> <li>Timestamped RDF named graph stream</li> </ul> RDF Stream Taxonomy<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology                    </code> Class(es) skos:ConceptScheme owl:Ontology Description                      RDF-STaX is an OWL 2 DL ontology that enables describing the types of RDF streams and defines relations between them.                  RDF dataset<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#dataset                    </code> Class(es) stax:RdfElementType Description                      https://www.w3.org/TR/rdf11-concepts/#section-dataset                  Flat RDF quad stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#flatRdfQuadStream                    </code> Class(es) skos:Concept stax:ConcreteRdfStreamType Description                      A flat RDF quad stream is an RDF stream whose elements are quad statements.                  Flat RDF stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#flatRdfStream                    </code> Class(es) skos:Concept stax:AbstractRdfStreamType Description                      A flat RDF stream is an RDF stream whose elements are statements (either RDF triples or RDF quads).                  Flat RDF triple stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#flatRdfTripleStream                    </code> Class(es) skos:Concept stax:ConcreteRdfStreamType Description                      A flat RDF triple stream is an RDF stream whose elements are triple statements.                  RDF graph<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#graph                    </code> Class(es) stax:RdfElementType Description                      https://www.w3.org/TR/rdf11-concepts/#section-rdf-graph                  Grouped RDF stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#groupedRdfStream                    </code> Class(es) skos:Concept stax:AbstractRdfStreamType Description                      A grouped RDF stream is an RDF stream whose elements are either RDF graphs or RDF datasets.                  RDF quad<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#quad                    </code> Class(es) stax:RdfElementType Description                      An RDF quad is an RDF triple with a fourth component indicating the RDF graph the triple belongs to. If the triple is in a named graph, then the fourth component is the graph name (blank node or IRI). If the triple is in the default graph, then the fourth component is empty.                  RDF dataset stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#rdfDatasetStream                    </code> Class(es) skos:Concept stax:ConcreteRdfStreamType Description                      An RDF dataset stream is a grouped RDF stream whose elements are RDF datasets.                  RDF graph stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#rdfGraphStream                    </code> Class(es) skos:Concept stax:ConcreteRdfStreamType Description                      An RDF graph stream is a grouped RDF stream whose elements are unnamed (default) RDF graphs.                  RDF named graph stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#rdfNamedGraphStream                    </code> Class(es) skos:Concept stax:ConcreteRdfStreamType Description                      An RDF named graph stream is an RDF dataset stream in which every element has exactly one named RDF graph pair , where G is an RDF graph, and n is the graph node. Apart from graph G, the dataset may contain any number of triples in the default graph.                  RDF stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#rdfStream                    </code> Class(es) skos:Concept stax:AbstractRdfStreamType Description                      An RDF stream is an ordered, potentially infinite sequence of RDF stream elements.                  RDF subject graph stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#rdfSubjectGraphStream                    </code> Class(es) skos:Concept stax:ConcreteRdfStreamType Description                      An RDF subject graph stream is an RDF graph stream in which every element contains exactly one unique triple subject.                  Timestamped RDF named graph stream<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#timestampedRdfNamedGraphStream                    </code> Class(es) skos:Concept stax:ConcreteRdfStreamType Description                      A timestamped named graph is an RDF dataset in which: (1) there is exactly one named RDF graph pair , where G is an RDF graph, and n is the graph node; (2) the default graph includes a timestamp triple , where p is a timestamp predicate that relates t, called the timestamp, and the graph G.  A timestamped RDF named graph stream is an RDF named graph stream in which every element is a timestamped named graph. The elements that share the same timestamp predicate p are ordered by the partial order associated with p.                  RDF triple<sup>ni</sup> URI <code>                       https://w3id.org/stax/ontology#triple                    </code> Class(es) stax:RdfElementType Description                      https://www.w3.org/TR/rdf11-concepts/#section-triples                  Namespaces \u2191 default (stax) <code>https://w3id.org/stax/ontology#</code> brick <code>https://brickschema.org/schema/Brick#</code> csvw <code>http://www.w3.org/ns/csvw#</code> dc <code>http://purl.org/dc/elements/1.1/</code> dcam <code>http://purl.org/dc/dcam/</code> dcat <code>http://www.w3.org/ns/dcat#</code> dcmitype <code>http://purl.org/dc/dcmitype/</code> dcterms <code>http://purl.org/dc/terms/</code> doap <code>http://usefulinc.com/ns/doap#</code> foaf <code>http://xmlns.com/foaf/0.1/</code> geo <code>http://www.opengis.net/ont/geosparql#</code> odrl <code>http://www.w3.org/ns/odrl/2/</code> org <code>http://www.w3.org/ns/org#</code> owl <code>http://www.w3.org/2002/07/owl#</code> prof <code>http://www.w3.org/ns/dx/prof/</code> prov <code>http://www.w3.org/ns/prov#</code> qb <code>http://purl.org/linked-data/cube#</code> rdf <code>http://www.w3.org/1999/02/22-rdf-syntax-ns#</code> rdfs <code>http://www.w3.org/2000/01/rdf-schema#</code> schema1 <code>http://schema.org/</code> sd <code>http://www.w3.org/ns/sparql-service-description#</code> sdo <code>https://schema.org/</code> sh <code>http://www.w3.org/ns/shacl#</code> skos <code>http://www.w3.org/2004/02/skos/core#</code> sosa <code>http://www.w3.org/ns/sosa/</code> ssn <code>http://www.w3.org/ns/ssn/</code> time <code>http://www.w3.org/2006/time#</code> vann <code>http://purl.org/vocab/vann/</code> void <code>http://rdfs.org/ns/void#</code> wgs <code>https://www.w3.org/2003/01/geo/wgs84_pos#</code> xsd <code>http://www.w3.org/2001/XMLSchema#</code> Legend <sup>c</sup>Classes <sup>op</sup>Object Properties <sup>fp</sup>Functional Properties <sup>dp</sup>Data Properties <sup>ap</sup>Annotation Properties <sup>p</sup>Properties <sup>ni</sup>Named Individuals"},{"location":"ontology/#owl-2-profiles","title":"OWL 2 Profiles","text":"<p>The ontology is written in OWL 2 DL. It is checked for compliance with the profile in the CI pipeline.</p> <p>RDF-STaX imports SKOS, which is OWL 2 Full by default. There is however a subset of SKOS that is OWL 2 DL, and this is the version of SKOS that is used in RDF-STaX.</p> <p>The released version of the ontology includes additional assertions (inferred, authorship, alignments) that are not part of the ontology itself. These assertions may be in OWL 2 Full. To get the OWL 2 DL version of the ontology, see the notes on versioning and releases below.</p>"},{"location":"ontology/#versioning-and-releases","title":"Versioning and releases","text":"<p>RDF-STaX follows the Semantic Versioning 2 scheme. The version number is stored in the <code>owl:versionInfo</code> annotation property of the ontology and is a part of the version IRI. The <code>dev</code> version corresponds to the <code>main</code> branch of the repository. The <code>stable</code> version is an alias for the latest tagged release. When you don't specify a version, the <code>dev</code> version is used.</p> <p>The dropdown at the top of the page allows you to switch between different versions of the documentation. Previous releases can also be found on GitHub.</p> <p>The released versions of the ontology include also the inferred statements, authorship information, and alignments to other ontologies. If you would like to get the raw ontology without these additions (OWL 2 DL), append <code>/dl</code> to the URL, e.g., <code>https://w3id.org/stax/ontology/dl</code>.</p> <p>Released versions of the ontology are available in the JSON-LD, N-Triples, RDF/XML, and Turtle formats, by appending their respective extension at the end of the ontology's URL, or with the content negotiation mechanism. Some examples of links that would work:</p> <ul> <li><code>https://w3id.org/stax/ontology</code> (content negotiation)</li> <li><code>https://w3id.org/stax/ontology.rdf</code> (explicitly ask for RDF/XML)</li> <li><code>https://w3id.org/stax/ontology/dl.rdf</code> (OWL 2 DL version, explicitly ask for RDF/XML)</li> <li><code>https://w3id.org/stax/dev/ontology</code> (content negotiation)</li> <li><code>https://w3id.org/stax/dev/ontology/dl</code> (OWL 2 DL version, content negotiation)</li> <li><code>https://w3id.org/stax/dev/ontology.ttl</code> (explicitly ask for Turtle)</li> <li><code>https://w3id.org/stax/stable/ontology</code> (content negotiation)</li> <li><code>https://w3id.org/stax/1.0.0/ontology.jsonld</code> (explicitly ask for JSON-LD)</li> </ul> <p>Important</p> <p>The RDF of the ontology can only be accessed via the ontology's PURL (<code>https://w3id.org/stax/...</code>), not via the URL you currently see in your browser.</p> <p>Note</p> <p>The process for making releases is described on the Contributing page.</p>"},{"location":"ontology/#see-also","title":"See also","text":"<ul> <li>How to use it?</li> <li>Taxonomy overview</li> <li>Contributing</li> </ul>"},{"location":"taxonomy/","title":"Taxonomy overview","text":"<p>The diagram below is an overview of the RDF Stream Taxonomy (RDF-STaX). Each term in the diagram is represented by an instance of the <code>stax:RdfStreamType</code> class in the RDF-STaX ontology. The ontology also contains the formal definitions of each stream type.</p> <p> </p> Overview of the taxonomy \u2013 click to enlarge. <p>You can find a detailed discussion on the taxonomy, formal definitions, its usage, and its mapping to other research in the RDF-STaX paper. TODO TODO TODO!</p>"},{"location":"taxonomy/#see-also","title":"See also","text":"<ul> <li>Ontology documentation</li> <li>How to use RDF-STaX?</li> </ul>"},{"location":"use-it/","title":"How to use RDF-STaX?","text":"<p>RDF stream type usage is often a subjective matter, so RDF-STaX provides facilities for making subjective assertions about RDF stream types. For example: I see this resource as an RDF graph stream, because (...), as opposed to strict, universal classification.</p> <p>The assertions can be made by anyone, anywhere \u2013 be it in the metadata of your resource, when discussing research works and software, or elsewhere.</p>"},{"location":"use-it/#annotating-rdf-stream-types","title":"Annotating RDF stream types","text":"<p>Making a statement about something's RDF stream type is very straightforward. For example, to say that <code>&lt;https://example.org/some-resource&gt;</code> is an RDF graph stream, you would use the following RDF:</p> <pre><code>@prefix stax: &lt;https://w3id.org/stax/ontology#&gt; .\n\n_:usage a stax:RdfStreamTypeUsage ;\n    stax:hasStreamType stax:rdfGraphStream ;\n    stax:isUsageOf &lt;https://example.org/some-resource&gt; .\n</code></pre> <p>It is recommended (but not required) to have one <code>stax:RdfStreamTypeUsage</code> instance per annotated resource and per RDF stream type. This makes it easier to find all the annotations for a given resource or stream type.</p> <p>You can also make the statement in reverse, by annotating the resource itself. This can be especially useful when annotating RDF streams on the Web or in a dataset. The following three examples illustrate combining RDF-STaX with other vocabularies for describing datasets and streams (VoCaLS, VoID, DCAT).</p> Example: VoCaLS <code>RDFStream</code> (click to expand) <p>To annotate a <code>vocals:RDFStream</code> from the VoCaLS Vocabulary:</p> <pre><code>@prefix stax: &lt;https://w3id.org/stax/ontology#&gt; .\n@prefix vocals: &lt;http://w3id.org/rsp/vocals#&gt; .\n\n_:stream a vocals:RDFStream ;\n    # ... other properties of the stream ...\n    stax:hasStreamTypeUsage [\n        a stax:RdfStreamTypeUsage ;\n        stax:hasStreamType stax:rdfGraphStream\n    ] .\n</code></pre> Example: VoID <code>Dataset</code> (click to expand) <p>To annotate a <code>void:Dataset</code> from the VoID Vocabulary:</p> <pre><code>@prefix stax: &lt;https://w3id.org/stax/ontology#&gt; .\n@prefix void: &lt;http://rdfs.org/ns/void#&gt; .\n\n_:dataset a void:Dataset ;\n    # ... other properties of the dataset ...\n    stax:hasStreamTypeUsage [\n        a stax:RdfStreamTypeUsage ;\n        stax:hasStreamType stax:flatRdfTripleStream\n    ] .\n</code></pre> <p>In VoID, <code>void:Dataset</code> refers to a set of triples, which can be viewed as a flat RDF triple stream.</p> Example: DCAT <code>Distribution</code> (click to expand) <p>In DCAT, a dataset may have multiple representations (<code>dcat:Distribution</code>). Thus, here we will want to annotate the distribution, not the dataset itself:</p> <pre><code>@prefix dcat: &lt;http://www.w3.org/ns/dcat#&gt; .\n@prefix stax: &lt;https://w3id.org/stax/ontology#&gt; .\n\n_:dataset a dcat:Dataset ;\n    # ... other properties of the dataset ...\n    dcat:distribution [\n        a dcat:Distribution ;\n        # ... other properties of the distribution ...\n        stax:hasStreamTypeUsage [\n            a stax:RdfStreamTypeUsage ;\n            stax:hasStreamType stax:rdfDatasetStream\n        ]\n    ] .\n</code></pre>"},{"location":"use-it/#adding-more-information","title":"Adding more information","text":"<p>The <code>stax:RdfStreamTypeUsage</code> instance is a good place to put additional information about the usage, such as a textual explanation, the source of the information, or the author of the statement. For example:</p> <pre><code>@prefix cito: &lt;http://purl.org/spar/cito/&gt; .\n@prefix dcterms: &lt;http://purl.org/dc/terms/&gt; .\n@prefix rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt; .\n@prefix stax: &lt;https://w3id.org/stax/ontology#&gt; .\n\n_:usage a stax:RdfStreamTypeUsage ;\n    rdfs:comment \"The authors state that for their proposed system, 'the streaming element (i.e. a single message) (...) is a set of triples'. Therefore, it uses an RDF graph stream.\"@en ;\n    stax:hasStreamType stax:rdfGraphStream ;\n    stax:isUsageOf &lt;https://doi.org/10.1109/ICSTCC.2017.8107003&gt; ;\n    cito:citesAsEvidence &lt;https://doi.org/10.1109/ICSTCC.2017.8107003&gt; ;\n    dcterms:creator &lt;https://orcid.org/0000-0002-2543-9461&gt; .\n</code></pre> <p>You can use whatever properties you like, however, the following are recommended:</p> <ul> <li>CiTO ontology for typing the citations.</li> <li>DCMI Metadata Terms for the statement author information.</li> <li><code>rdfs:comment</code> for the textual explanation.</li> <li>For statement creators, we recommend using ORCID.</li> <li>For research works, we recommend using DOI.</li> </ul>"},{"location":"use-it/#making-rdf-stream-type-usage-nanopublications","title":"Making RDF stream type usage nanopublications","text":"<p>This subjective style of RDF-STaX meshes very well with the idea of nanopublications, small snippets of scientific knowledge. See the documentation page on nanopublications for more information on how to find, use, and create them.</p>"},{"location":"use-it/#see-also","title":"See also","text":"<ul> <li>Licensing and citation</li> <li>Taxonomy overview</li> <li>Ontology documentation</li> <li>Nanopublications</li> </ul>"},{"location":"uses/","title":"RDF-STaX uses and publications","text":"<p>Are you using RDF-STaX in your project or paper? We would be glad to list it here! Please open an issue with a link or a brief explanation of how you use RDF-STaX.</p>"},{"location":"uses/#projects-using-rdf-stax","title":"Projects using RDF-STaX","text":"<p>TODO</p>"},{"location":"uses/#publications-about-rdf-stax","title":"Publications about RDF-STaX","text":"<p>TODO</p>"},{"location":"uses/#see-also","title":"See also","text":"<ul> <li>Contributing</li> <li>Licensing and citation</li> </ul>"},{"location":"includes/links/","title":"Links","text":"<p>Info</p> <p>Download the ontology in RDF: Turtle, N-Triples, JSON-LD, RDF/XML.</p>"}]}